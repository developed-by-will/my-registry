{
  "name": "login-01",
  "type": "registry:block",
  "description": "Login 01",
  "dependencies": [
    "react-icons",
    "next-themes"
  ],
  "registryDependencies": [
    "button",
    "card",
    "input",
    "label"
  ],
  "files": [
    {
      "path": "block/login-01/page.tsx",
      "content": "'use client';\n\nimport LoginPage01 from './components/form';\n\nexport default function Login() {\n  async function signIn() {\n    alert('Sign in logic');\n  }\n\n  async function signInWithGoogle() {\n    alert('Sign in with Google logic');\n  }\n\n  return (\n    <LoginPage01\n      customBtnColor=\"bg:background\"\n      customLabel=\"Sign In\"\n      customIcon=\"\"\n      formWidth={300}\n      providers={['custom', 'google']}\n      handleLogin={[() => signIn(), () => signInWithGoogle()]}\n    />\n  );\n}\n",
      "type": "registry:page",
      "target": "app/login-01/page.tsx"
    },
    {
      "path": "block/login-01/components/form.tsx",
      "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { useTheme } from \"next-themes\";\nimport Image, { StaticImageData } from \"next/image\";\nimport {\n  BsDiscord,\n  BsEnvelopeFill,\n  BsFacebook,\n  BsGithub,\n  BsGoogle,\n} from \"react-icons/bs\";\nimport { IconType } from \"react-icons/lib\";\nimport { ReactNode } from \"react\";\n\n// List of providers\ntype ProvidersEnum =\n  | \"google\"\n  | \"github\"\n  | \"discord\"\n  | \"facebook\"\n  | \"email\"\n  | \"custom\";\n\n// Exclude 'custom' from the list because it is handled separately\nconst providerDetails: Record<\n  Exclude<ProvidersEnum, \"custom\">,\n  { label: string; icon?: JSX.Element; background: string }\n> = {\n  google: {\n    label: \"Sign in with Google\",\n    icon: <BsGoogle />,\n    background: \"bg-orange-600\",\n  },\n  github: {\n    label: \"Sign in with GitHub\",\n    icon: <BsGithub />,\n    background: \"bg-stone-600\",\n  },\n  discord: {\n    label: \"Sign in with Discord\",\n    icon: <BsDiscord />,\n    background: \"bg-indigo-600\",\n  },\n  facebook: {\n    label: \"Sign in with Facebook\",\n    icon: <BsFacebook />,\n    background: \"bg-blue-600\",\n  },\n  email: {\n    label: \"Sign in with Email\",\n    icon: <BsEnvelopeFill />,\n    background: \"bg-emerald-600\",\n  },\n};\n\n// Check if one of the providers is 'custom'\n// If it is then customLabel & customBtnColor are required\nexport type LoginPage01Type = {\n  backgroundImage?: string | StaticImageData;\n  companyLogo?: string | StaticImageData | JSX.Element;\n  companyLogoAlternative?: string | StaticImageData | JSX.Element;\n  title?: string | JSX.Element;\n  description?: string | JSX.Element;\n  providers: ProvidersEnum[];\n  handleLogin: Array<() => void>;\n  formWidth: number;\n} & {\n  providers: (ProvidersEnum | \"custom\")[];\n  customLabel: string;\n  customBtnColor: string;\n  customIcon: IconType | string | JSX.Element;\n} & (\n    | { companyLogo?: undefined; companyLogoAlt?: undefined }\n    | {\n        companyLogo: string | StaticImageData | JSX.Element;\n        companyLogoAlt: string;\n        companyLogoAlternative: string | StaticImageData | JSX.Element;\n      }\n  );\n\nexport default function LoginPage01(props: Readonly<LoginPage01Type>) {\n  const {\n    backgroundImage,\n    companyLogo,\n    companyLogoAlternative,\n    title,\n    description,\n    providers = [],\n    handleLogin = [],\n    formWidth,\n  } = props;\n\n  const { theme, systemTheme } = useTheme();\n\n  // Optional chaining ensures customLabel & customBtnColor are only accessed if defined\n  const customLabel = \"customLabel\" in props ? props.customLabel : undefined;\n  const customBtnColor =\n    \"customBtnColor\" in props ? props.customBtnColor : undefined;\n  const companyLogoAlt =\n    \"companyLogoAlt\" in props ? props.companyLogoAlt : undefined;\n  const customIcon = \"customIcon\" in props ? props.customIcon : undefined;\n\n  const currentTheme = theme === \"system\" ? systemTheme : theme;\n  const logo = currentTheme === \"dark\" ? companyLogoAlternative : companyLogo;\n\n  return (\n    <>\n      {backgroundImage && (\n        <Image\n          src={backgroundImage}\n          alt=\"Background image of a forest\"\n          className=\"absolute w-full h-full object-cover\"\n          quality={100}\n          priority\n          fill\n        />\n      )}\n\n      <div className=\"flex flex-col items-center justify-center h-screen\">\n        <Card\n          className={`flex flex-col items-center justify-center bg-secondary/90 shadow-2xl px-4 z-10 w-[${formWidth}px]`}\n        >\n          <CardHeader className=\"flex flex-col items-center\">\n            {logo && (typeof logo === \"string\" || \"src\" in logo) ? (\n              <Image\n                src={logo}\n                alt={companyLogoAlt ?? \"Company Logo\"}\n                width={formWidth}\n                height={100}\n              />\n            ) : (\n              logo\n            )}\n            <CardTitle>{title && <h2>{title}</h2>}</CardTitle>\n            <CardDescription>\n              {description && (\n                <div className=\"text-colors-neutral-700\">{description}</div>\n              )}\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"w-full\">\n            <div className=\"flex flex-col gap-3\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input id=\"email\" placeholder=\"Emaill address\" />\n              <Label htmlFor=\"password\">Password</Label>\n              <Input id=\"password\" type=\"password\" placeholder=\"********\" />\n            </div>\n          </CardContent>\n          <CardFooter className=\"flex flex-col gap-3 pb-14\">\n            {providers.map((provider, index) => {\n              const { label, icon, background } =\n                provider === \"custom\"\n                  ? {\n                      label: customLabel!,\n                      icon: customIcon,\n                      background: customBtnColor!,\n                    }\n                  : providerDetails[provider];\n              const handleClick = handleLogin[index];\n\n              return (\n                <Button\n                  key={provider}\n                  onClick={handleClick}\n                  className={`flex items-center w-full gap-2 hover:saturate-50 transition-all duration-300 ${background}`}\n                >\n                  {icon as ReactNode} {label}\n                </Button>\n              );\n            })}\n          </CardFooter>\n        </Card>\n      </div>\n    </>\n  );\n}\n",
      "type": "registry:component",
      "target": "app/login-01/components/form.tsx"
    }
  ]
}